--사용자 정보 저장을 위한 회원 테이블
CREATE TABLE users( 
    id      VARCHAR2(10),--pk
    passwd  VARCHAR2(8) NOT NULL,   
    name    VARCHAR2(20) NOT NULL,
    email   VARCHAR2(50), --uique 
    regdate DATE DEFAULT SYSDATE
    );
    
ALTER TABLE users
    ADD (
            CONSTRAINT users_id_pk PRIMARY KEY(id),
            CONSTRAINT users_email_uk UNIQUE(email)
    );
    
select *
from user_constraints;

INSERT INTO users(id,passwd,name,email)
VALUES ('bangry','1111','정충효','bangry@naver.com');

commit;

drop table users;
select * from users;

Select id,passwd,name,email,TO_CHAR(regdate,'YYYY-MM-DD DAY') AS regdate
from users
where id = 'bangry';

Select id,passwd,name,email,TO_CHAR(regdate,'YYYY-MM-DD DAY') regdate
from users
where id = 'bangry' and passwd= '1111';  

ALTER TABLE users MODIFY passwd VARCHAR(20);
desc users;


CREATE TABLE cookbook( 
    book_id      NUMBER(7),--pk
    book_name  VARCHAR2(30) NOT NULL,
    book_desc    VARCHAR2(200),
    author_id   VARCHAR2(30)  --fk
    );
    
    
CREATE TABLE recipe( 
    recipe_id      NUMBER(7),--pk
    book_id  NUMBER(7), --fk
    recipe_name    VARCHAR2(30) NOT NULL,
    recipe_time   NUMBER(3), --uique 
    recipe_level NUMBER(1),
    ingredients VARCHAR2(300),
    img_cont_type VARCHAR2(20),
    img_file_name VARCHAR2(20),
         VARCHAR2(30)
    );


ALTER TABLE users
MODIFY( 
    id      VARCHAR2(30),--pk
    passwd  VARCHAR2(30) ,
    name    VARCHAR2(30) 
    );
    
CREATE TABLE recipe_procedure( 
     recipe_id      NUMBER(7),--pk
    seq_num  NUMBER(2),
    procedure    VARCHAR2(200) NOT NULL 
    );
    
ALTER TABLE cookbook
    ADD (
            CONSTRAINT book_id_pk PRIMARY KEY(book_id),
            CONSTRAINT author_id_fk FOREIGN KEY(author_id) REFERENCES users(id) 
    );
    


ALTER TABLE recipe
    ADD (
            CONSTRAINT recipe_id_pk PRIMARY KEY(recipe_id),
            CONSTRAINT book_id_fk FOREIGN KEY(book_id) REFERENCES cookbook(book_id), 
            CONSTRAINT writer_id_fk FOREIGN KEY(writer_id) REFERENCES users(id)
    );

ALTER TABLE recipe_procedure
    ADD ( --pfk 하는법
            CONSTRAINT recipe_id_seqmun_pk PRIMARY KEY(recipe_id ,seq_num)
            
    );
ALTER TABLE recipe_procedure
    ADD ( --pfk 하는법
            CONSTRAINT recipe_id_fk FOREIGN KEY(recipe_id) REFERENCES recipe(recipe_id)
    );

    CREATE SEQUENCE recipe_seq;

    ALTER TABlE recipe ADD view_num NUMBER(7) DEFAULT 0;
   
    CREATE SEQUENCE cookbook_seq;

    ALTER TABlE cookbook ADD view_num NUMBER(7) DEFAULT 0;

    CREATE SEQUENCE cookseq_seq;

ALTER TABlE recipe_procedure ADD exist NUMBER(1) DEFAULT 1;
ALTER TABlE cookbook ADD exist NUMBER(1) DEFAULT 1;
ALTER TABlE recipe ADD exist NUMBER(1) DEFAULT 1;

