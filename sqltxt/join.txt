--CROSS JOIN 하나의 사원은 27개 모든 부서에 소속될 수 있다 (107*27=2889)
SELECT employee_id,last_name,department_name
FROM employees,departments;

-- 조인 시 컬럼명의 모호성을 해결하기 위해 테이블명이나 별칭 사용을 권장

SELECT e.employee_id,e.last_name,d.department_name
FROM employees e, departments d;
--이렇게 쓰는것을  권장함
SELECT e.employee_id,e.last_name,d.department_name
FROM employees e CROSS JOIN departments d;

SELECT e.employee_id,e.last_name,d.department_name
FROM employees e, departments d
WHERE e.department_id = d.department_id;

SELECT e.employee_id,e.last_name,d.department_name
FROM employees e JOIN departments d --INNER JOIN이라고 써도 가능
--ON e.department_id = d.department_id; 아래와 같은 동작함
USING (department_id);

SELECT *
FROM user_tables;

SELECT *
FROM departments;

DESC employees;
DESC departments; --키들 가지고 오는

SELECT e.employee_id,
e.last_name,
d.department_name,
l.city,
l.state_province,
c.country_name
FROM employees e
    JOIN departments d
        ON e.department_id = d.department_id
        --USING(department_id)
    JOIN locations l
        ON d.location_id = l.location_id
        --USING(loaction_id)
    JOIN countries c
        ON l.country_id = c.country_id;
        --USING(country_id)

DESC jobs; 

SELECT e.employee_id,
       e.last_name,
       e.salary,
       j.job_title
FROM   employees e
        JOIN jobs j
            ON e.salary 
            BETWEEN j.min_salary AND j.max_salary
ORDER BY e.employee_id;

SELECT e.employee_id,
e.last_name,
d.department_name
FROM employees e,
departments d
WHERE e.department_id = d.department_id(+);

--LEFT는 왼쪽에 있는것만 나오게 RIGHT는 오른쪽것만 FULL은 전체
SELECT e.employee_id,e.last_name,d.department_name
FROM employees e
    FULL OUTER JOIN departments d
        ON e.department_id = d.department_id;
        
SELECT e.first_name , m.first_name
FROM EMPLOYEES e
LEFT OUTER JOIN EMPLOYEES m
ON e.manager_id = m.employee_id;

